ARM GAS  /tmp/ccuQbbvM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PeriodElapsedCallback
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_TIM_PeriodElapsedCallback:
  27              	.LVL0:
  28              	.LFB423:
  29              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.cpp ****   * All rights reserved.</center></h2>
  11:Core/Src/main.cpp ****   *
  12:Core/Src/main.cpp ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.cpp ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.cpp ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.cpp ****   *                             www.st.com/SLA0044
  16:Core/Src/main.cpp ****   *
  17:Core/Src/main.cpp ****   ******************************************************************************
  18:Core/Src/main.cpp ****   */
  19:Core/Src/main.cpp **** /* USER CODE END Header */
  20:Core/Src/main.cpp **** 
  21:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.cpp **** #include "main.h"
  23:Core/Src/main.cpp **** #include "cmsis_os.h"
  24:Core/Src/main.cpp **** #include "dma.h"
  25:Core/Src/main.cpp **** #include "i2c.h"
  26:Core/Src/main.cpp **** #include "tim.h"
  27:Core/Src/main.cpp **** #include "usart.h"
  28:Core/Src/main.cpp **** #include "gpio.h"
  29:Core/Src/main.cpp **** #include"robot_operation.h"
ARM GAS  /tmp/ccuQbbvM.s 			page 2


  30:Core/Src/main.cpp **** 
  31:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  32:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  33:Core/Src/main.cpp **** 
  34:Core/Src/main.cpp **** /* USER CODE END Includes */
  35:Core/Src/main.cpp **** 
  36:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.cpp **** 
  39:Core/Src/main.cpp **** /* USER CODE END PTD */
  40:Core/Src/main.cpp **** 
  41:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  43:Core/Src/main.cpp **** 
  44:Core/Src/main.cpp **** /* USER CODE END PD */
  45:Core/Src/main.cpp **** 
  46:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  48:Core/Src/main.cpp **** 
  49:Core/Src/main.cpp **** /* USER CODE END PM */
  50:Core/Src/main.cpp **** 
  51:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.cpp **** 
  53:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  54:Core/Src/main.cpp **** 
  55:Core/Src/main.cpp **** /* USER CODE END PV */
  56:Core/Src/main.cpp **** 
  57:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.cpp **** void SystemClock_Config(void);
  59:Core/Src/main.cpp **** //extern "C" void MX_FREERTOS_Init(void);
  60:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.cpp **** 
  62:Core/Src/main.cpp **** /* USER CODE END PFP */
  63:Core/Src/main.cpp **** 
  64:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.cpp **** 
  67:Core/Src/main.cpp **** /* USER CODE END 0 */
  68:Core/Src/main.cpp **** 
  69:Core/Src/main.cpp **** /**
  70:Core/Src/main.cpp ****   * @brief  The application entry point.
  71:Core/Src/main.cpp ****   * @retval int
  72:Core/Src/main.cpp ****   */
  73:Core/Src/main.cpp **** int main(void)
  74:Core/Src/main.cpp **** {
  75:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.cpp **** 
  77:Core/Src/main.cpp ****   /* USER CODE END 1 */
  78:Core/Src/main.cpp ****   
  79:Core/Src/main.cpp **** 
  80:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
  81:Core/Src/main.cpp **** 
  82:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Core/Src/main.cpp ****   HAL_Init();
  84:Core/Src/main.cpp **** 
  85:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
  86:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccuQbbvM.s 			page 3


  87:Core/Src/main.cpp ****   /* USER CODE END Init */
  88:Core/Src/main.cpp **** 
  89:Core/Src/main.cpp ****   /* Configure the system clock */
  90:Core/Src/main.cpp ****   SystemClock_Config();
  91:Core/Src/main.cpp **** 
  92:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
  93:Core/Src/main.cpp **** 
  94:Core/Src/main.cpp ****   /* USER CODE END SysInit */
  95:Core/Src/main.cpp **** 
  96:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
  97:Core/Src/main.cpp ****   MX_GPIO_Init();
  98:Core/Src/main.cpp ****   MX_DMA_Init();
  99:Core/Src/main.cpp ****   MX_I2C1_Init();
 100:Core/Src/main.cpp ****   MX_TIM1_Init();
 101:Core/Src/main.cpp ****   MX_TIM2_Init();
 102:Core/Src/main.cpp ****   MX_TIM3_Init();
 103:Core/Src/main.cpp ****   MX_TIM4_Init();
 104:Core/Src/main.cpp ****   MX_TIM8_Init();
 105:Core/Src/main.cpp ****   MX_UART4_Init();
 106:Core/Src/main.cpp ****   MX_USART2_UART_Init();
 107:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 108:Core/Src/main.cpp **** 
 109:Core/Src/main.cpp ****   /* USER CODE END 2 */
 110:Core/Src/main.cpp **** 
 111:Core/Src/main.cpp ****   /* Call init function for freertos objects (in freertos.c) */
 112:Core/Src/main.cpp ****   //MX_FREERTOS_Init(); 
 113:Core/Src/main.cpp **** 
 114:Core/Src/main.cpp ****   /* Start scheduler */
 115:Core/Src/main.cpp ****   //osKernelStart();
 116:Core/Src/main.cpp ****   /* We should never get here as control is now taken by the scheduler */
 117:Core/Src/main.cpp ****   /* Infinite loop */
 118:Core/Src/main.cpp ****   robo_init();
 119:Core/Src/main.cpp ****   robo_play();
 120:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 121:Core/Src/main.cpp ****   while (1)
 122:Core/Src/main.cpp ****   {
 123:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 124:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 125:Core/Src/main.cpp ****   }
 126:Core/Src/main.cpp ****   /* USER CODE END 3 */
 127:Core/Src/main.cpp **** }
 128:Core/Src/main.cpp **** 
 129:Core/Src/main.cpp **** /**
 130:Core/Src/main.cpp ****   * @brief System Clock Configuration
 131:Core/Src/main.cpp ****   * @retval None
 132:Core/Src/main.cpp ****   */
 133:Core/Src/main.cpp **** void SystemClock_Config(void)
 134:Core/Src/main.cpp **** {
 135:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Core/Src/main.cpp **** 
 138:Core/Src/main.cpp ****   /** Configure the main internal regulator output voltage 
 139:Core/Src/main.cpp ****   */
 140:Core/Src/main.cpp ****   __HAL_RCC_PWR_CLK_ENABLE();
 141:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 142:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB busses clocks 
 143:Core/Src/main.cpp ****   */
ARM GAS  /tmp/ccuQbbvM.s 			page 4


 144:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 145:Core/Src/main.cpp ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 146:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 147:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 148:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 8;
 149:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 336;
 150:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 151:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 152:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 153:Core/Src/main.cpp ****   {
 154:Core/Src/main.cpp ****     Error_Handler();
 155:Core/Src/main.cpp ****   }
 156:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB busses clocks 
 157:Core/Src/main.cpp ****   */
 158:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 159:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 160:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 161:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 162:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 163:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 164:Core/Src/main.cpp **** 
 165:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 166:Core/Src/main.cpp ****   {
 167:Core/Src/main.cpp ****     Error_Handler();
 168:Core/Src/main.cpp ****   }
 169:Core/Src/main.cpp **** }
 170:Core/Src/main.cpp **** 
 171:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 172:Core/Src/main.cpp **** 
 173:Core/Src/main.cpp **** /* USER CODE END 4 */
 174:Core/Src/main.cpp **** 
 175:Core/Src/main.cpp **** /**
 176:Core/Src/main.cpp ****   * @brief  Period elapsed callback in non blocking mode
 177:Core/Src/main.cpp ****   * @note   This function is called  when TIM5 interrupt took place, inside
 178:Core/Src/main.cpp ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 179:Core/Src/main.cpp ****   * a global variable "uwTick" used as application time base.
 180:Core/Src/main.cpp ****   * @param  htim : TIM handle
 181:Core/Src/main.cpp ****   * @retval None
 182:Core/Src/main.cpp ****   */
 183:Core/Src/main.cpp **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 184:Core/Src/main.cpp **** {
  30              		.loc 1 184 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 184 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 185:Core/Src/main.cpp ****   /* USER CODE BEGIN Callback 0 */
 186:Core/Src/main.cpp **** 
 187:Core/Src/main.cpp ****   /* USER CODE END Callback 0 */
 188:Core/Src/main.cpp ****   if (htim->Instance == TIM5) {
  40              		.loc 1 188 3 is_stmt 1 view .LVU2
  41              		.loc 1 188 13 is_stmt 0 view .LVU3
ARM GAS  /tmp/ccuQbbvM.s 			page 5


  42 0002 0268     		ldr	r2, [r0]
  43              		.loc 1 188 3 view .LVU4
  44 0004 034B     		ldr	r3, .L5
  45 0006 9A42     		cmp	r2, r3
  46 0008 00D0     		beq	.L4
  47              	.LVL1:
  48              	.L1:
 189:Core/Src/main.cpp ****     HAL_IncTick();
 190:Core/Src/main.cpp ****   }
 191:Core/Src/main.cpp ****   /* USER CODE BEGIN Callback 1 */
 192:Core/Src/main.cpp **** 
 193:Core/Src/main.cpp ****   /* USER CODE END Callback 1 */
 194:Core/Src/main.cpp **** }
  49              		.loc 1 194 1 view .LVU5
  50 000a 08BD     		pop	{r3, pc}
  51              	.LVL2:
  52              	.L4:
 189:Core/Src/main.cpp ****     HAL_IncTick();
  53              		.loc 1 189 5 is_stmt 1 view .LVU6
 189:Core/Src/main.cpp ****     HAL_IncTick();
  54              		.loc 1 189 16 is_stmt 0 view .LVU7
  55 000c FFF7FEFF 		bl	HAL_IncTick
  56              	.LVL3:
  57              		.loc 1 194 1 view .LVU8
  58 0010 FBE7     		b	.L1
  59              	.L6:
  60 0012 00BF     		.align	2
  61              	.L5:
  62 0014 000C0040 		.word	1073744896
  63              		.cfi_endproc
  64              	.LFE423:
  66              		.section	.text.Error_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	Error_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	Error_Handler:
  75              	.LFB424:
 195:Core/Src/main.cpp **** 
 196:Core/Src/main.cpp **** /**
 197:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 198:Core/Src/main.cpp ****   * @retval None
 199:Core/Src/main.cpp ****   */
 200:Core/Src/main.cpp **** void Error_Handler(void)
 201:Core/Src/main.cpp **** {
  76              		.loc 1 201 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
 202:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 203:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 204:Core/Src/main.cpp ****   __disable_irq();
  82              		.loc 1 204 3 view .LVU10
ARM GAS  /tmp/ccuQbbvM.s 			page 6


  83              	.LBB4:
  84              	.LBI4:
  85              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccuQbbvM.s 			page 7


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  /tmp/ccuQbbvM.s 			page 8


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  86              		.loc 2 140 27 view .LVU11
  87              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  88              		.loc 2 142 3 view .LVU12
  89              		.syntax unified
  90              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  91 0000 72B6     		cpsid i
  92              	@ 0 "" 2
  93              		.thumb
  94              		.syntax unified
  95              	.L8:
  96              	.LBE5:
  97              	.LBE4:
 205:Core/Src/main.cpp ****   while (1)
  98              		.loc 1 205 3 discriminator 1 view .LVU13
  99              		.loc 1 205 3 discriminator 1 view .LVU14
 100 0002 FEE7     		b	.L8
 101              		.cfi_endproc
 102              	.LFE424:
 104              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
 105              		.align	1
 106              		.global	_Z18SystemClock_Configv
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv4-sp-d16
 112              	_Z18SystemClock_Configv:
ARM GAS  /tmp/ccuQbbvM.s 			page 9


 113              	.LFB422:
 134:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 114              		.loc 1 134 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 80
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 00B5     		push	{lr}
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 14, -4
 122 0002 95B0     		sub	sp, sp, #84
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 88
 135:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 125              		.loc 1 135 3 view .LVU16
 135:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 126              		.loc 1 135 22 is_stmt 0 view .LVU17
 127 0004 3022     		movs	r2, #48
 128 0006 0021     		movs	r1, #0
 129 0008 08A8     		add	r0, sp, #32
 130 000a FFF7FEFF 		bl	memset
 131              	.LVL4:
 136:Core/Src/main.cpp **** 
 132              		.loc 1 136 3 is_stmt 1 view .LVU18
 136:Core/Src/main.cpp **** 
 133              		.loc 1 136 22 is_stmt 0 view .LVU19
 134 000e 0023     		movs	r3, #0
 135 0010 0393     		str	r3, [sp, #12]
 136 0012 0493     		str	r3, [sp, #16]
 137 0014 0593     		str	r3, [sp, #20]
 138 0016 0693     		str	r3, [sp, #24]
 139 0018 0793     		str	r3, [sp, #28]
 140:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 140              		.loc 1 140 3 is_stmt 1 view .LVU20
 141              	.LBB6:
 140:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 142              		.loc 1 140 3 view .LVU21
 143 001a 0193     		str	r3, [sp, #4]
 140:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 144              		.loc 1 140 3 view .LVU22
 145 001c 214A     		ldr	r2, .L15
 146 001e 116C     		ldr	r1, [r2, #64]
 147 0020 41F08051 		orr	r1, r1, #268435456
 148 0024 1164     		str	r1, [r2, #64]
 140:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 149              		.loc 1 140 3 view .LVU23
 150 0026 126C     		ldr	r2, [r2, #64]
 151 0028 02F08052 		and	r2, r2, #268435456
 152 002c 0192     		str	r2, [sp, #4]
 140:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 153              		.loc 1 140 3 view .LVU24
 154 002e 019A     		ldr	r2, [sp, #4]
 155              	.LBE6:
 141:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB busses clocks 
 156              		.loc 1 141 3 view .LVU25
 157              	.LBB7:
 141:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccuQbbvM.s 			page 10


 158              		.loc 1 141 3 view .LVU26
 159 0030 0293     		str	r3, [sp, #8]
 141:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB busses clocks 
 160              		.loc 1 141 3 view .LVU27
 161 0032 1D4B     		ldr	r3, .L15+4
 162 0034 1A68     		ldr	r2, [r3]
 163 0036 42F48042 		orr	r2, r2, #16384
 164 003a 1A60     		str	r2, [r3]
 141:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB busses clocks 
 165              		.loc 1 141 3 view .LVU28
 166 003c 1B68     		ldr	r3, [r3]
 167 003e 03F48043 		and	r3, r3, #16384
 168 0042 0293     		str	r3, [sp, #8]
 141:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB busses clocks 
 169              		.loc 1 141 3 view .LVU29
 170 0044 029B     		ldr	r3, [sp, #8]
 171              	.LBE7:
 144:Core/Src/main.cpp ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 172              		.loc 1 144 3 view .LVU30
 144:Core/Src/main.cpp ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 173              		.loc 1 144 36 is_stmt 0 view .LVU31
 174 0046 0123     		movs	r3, #1
 175 0048 0893     		str	r3, [sp, #32]
 145:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 176              		.loc 1 145 3 is_stmt 1 view .LVU32
 145:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 177              		.loc 1 145 30 is_stmt 0 view .LVU33
 178 004a 4FF48033 		mov	r3, #65536
 179 004e 0993     		str	r3, [sp, #36]
 146:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 180              		.loc 1 146 3 is_stmt 1 view .LVU34
 146:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 181              		.loc 1 146 34 is_stmt 0 view .LVU35
 182 0050 0223     		movs	r3, #2
 183 0052 0E93     		str	r3, [sp, #56]
 147:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 8;
 184              		.loc 1 147 3 is_stmt 1 view .LVU36
 147:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 8;
 185              		.loc 1 147 35 is_stmt 0 view .LVU37
 186 0054 4FF48002 		mov	r2, #4194304
 187 0058 0F92     		str	r2, [sp, #60]
 148:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 336;
 188              		.loc 1 148 3 is_stmt 1 view .LVU38
 148:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 336;
 189              		.loc 1 148 30 is_stmt 0 view .LVU39
 190 005a 0822     		movs	r2, #8
 191 005c 1092     		str	r2, [sp, #64]
 149:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 192              		.loc 1 149 3 is_stmt 1 view .LVU40
 149:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 193              		.loc 1 149 30 is_stmt 0 view .LVU41
 194 005e 4FF4A872 		mov	r2, #336
 195 0062 1192     		str	r2, [sp, #68]
 150:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 196              		.loc 1 150 3 is_stmt 1 view .LVU42
 150:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 197              		.loc 1 150 30 is_stmt 0 view .LVU43
ARM GAS  /tmp/ccuQbbvM.s 			page 11


 198 0064 1293     		str	r3, [sp, #72]
 151:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 199              		.loc 1 151 3 is_stmt 1 view .LVU44
 151:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 200              		.loc 1 151 30 is_stmt 0 view .LVU45
 201 0066 0723     		movs	r3, #7
 202 0068 1393     		str	r3, [sp, #76]
 152:Core/Src/main.cpp ****   {
 203              		.loc 1 152 3 is_stmt 1 view .LVU46
 152:Core/Src/main.cpp ****   {
 204              		.loc 1 152 24 is_stmt 0 view .LVU47
 205 006a 08A8     		add	r0, sp, #32
 206 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 207              	.LVL5:
 152:Core/Src/main.cpp ****   {
 208              		.loc 1 152 3 view .LVU48
 209 0070 98B9     		cbnz	r0, .L13
 158:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 210              		.loc 1 158 3 is_stmt 1 view .LVU49
 158:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 211              		.loc 1 158 31 is_stmt 0 view .LVU50
 212 0072 0F23     		movs	r3, #15
 213 0074 0393     		str	r3, [sp, #12]
 160:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 214              		.loc 1 160 3 is_stmt 1 view .LVU51
 160:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 215              		.loc 1 160 34 is_stmt 0 view .LVU52
 216 0076 0223     		movs	r3, #2
 217 0078 0493     		str	r3, [sp, #16]
 161:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 218              		.loc 1 161 3 is_stmt 1 view .LVU53
 161:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 219              		.loc 1 161 35 is_stmt 0 view .LVU54
 220 007a 0023     		movs	r3, #0
 221 007c 0593     		str	r3, [sp, #20]
 162:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 222              		.loc 1 162 3 is_stmt 1 view .LVU55
 162:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 223              		.loc 1 162 36 is_stmt 0 view .LVU56
 224 007e 4FF4A053 		mov	r3, #5120
 225 0082 0693     		str	r3, [sp, #24]
 163:Core/Src/main.cpp **** 
 226              		.loc 1 163 3 is_stmt 1 view .LVU57
 163:Core/Src/main.cpp **** 
 227              		.loc 1 163 36 is_stmt 0 view .LVU58
 228 0084 4FF48053 		mov	r3, #4096
 229 0088 0793     		str	r3, [sp, #28]
 165:Core/Src/main.cpp ****   {
 230              		.loc 1 165 3 is_stmt 1 view .LVU59
 165:Core/Src/main.cpp ****   {
 231              		.loc 1 165 26 is_stmt 0 view .LVU60
 232 008a 0521     		movs	r1, #5
 233 008c 03A8     		add	r0, sp, #12
 234 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 235              	.LVL6:
 165:Core/Src/main.cpp ****   {
 236              		.loc 1 165 3 view .LVU61
ARM GAS  /tmp/ccuQbbvM.s 			page 12


 237 0092 20B9     		cbnz	r0, .L14
 169:Core/Src/main.cpp **** 
 238              		.loc 1 169 1 view .LVU62
 239 0094 15B0     		add	sp, sp, #84
 240              	.LCFI3:
 241              		.cfi_remember_state
 242              		.cfi_def_cfa_offset 4
 243              		@ sp needed
 244 0096 5DF804FB 		ldr	pc, [sp], #4
 245              	.L13:
 246              	.LCFI4:
 247              		.cfi_restore_state
 154:Core/Src/main.cpp ****   }
 248              		.loc 1 154 5 is_stmt 1 view .LVU63
 154:Core/Src/main.cpp ****   }
 249              		.loc 1 154 18 is_stmt 0 view .LVU64
 250 009a FFF7FEFF 		bl	Error_Handler
 251              	.LVL7:
 252              	.L14:
 167:Core/Src/main.cpp ****   }
 253              		.loc 1 167 5 is_stmt 1 view .LVU65
 167:Core/Src/main.cpp ****   }
 254              		.loc 1 167 18 is_stmt 0 view .LVU66
 255 009e FFF7FEFF 		bl	Error_Handler
 256              	.LVL8:
 257              	.L16:
 258 00a2 00BF     		.align	2
 259              	.L15:
 260 00a4 00380240 		.word	1073887232
 261 00a8 00700040 		.word	1073770496
 262              		.cfi_endproc
 263              	.LFE422:
 265              		.section	.text.main,"ax",%progbits
 266              		.align	1
 267              		.global	main
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu fpv4-sp-d16
 273              	main:
 274              	.LFB421:
  74:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 275              		.loc 1 74 1 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ Volatile: function does not return.
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 08B5     		push	{r3, lr}
 281              	.LCFI5:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 3, -8
 284              		.cfi_offset 14, -4
  83:Core/Src/main.cpp **** 
 285              		.loc 1 83 3 view .LVU68
  83:Core/Src/main.cpp **** 
 286              		.loc 1 83 11 is_stmt 0 view .LVU69
 287 0002 FFF7FEFF 		bl	HAL_Init
ARM GAS  /tmp/ccuQbbvM.s 			page 13


 288              	.LVL9:
  90:Core/Src/main.cpp **** 
 289              		.loc 1 90 3 is_stmt 1 view .LVU70
  90:Core/Src/main.cpp **** 
 290              		.loc 1 90 21 is_stmt 0 view .LVU71
 291 0006 FFF7FEFF 		bl	_Z18SystemClock_Configv
 292              	.LVL10:
  97:Core/Src/main.cpp ****   MX_DMA_Init();
 293              		.loc 1 97 3 is_stmt 1 view .LVU72
  97:Core/Src/main.cpp ****   MX_DMA_Init();
 294              		.loc 1 97 15 is_stmt 0 view .LVU73
 295 000a FFF7FEFF 		bl	MX_GPIO_Init
 296              	.LVL11:
  98:Core/Src/main.cpp ****   MX_I2C1_Init();
 297              		.loc 1 98 3 is_stmt 1 view .LVU74
  98:Core/Src/main.cpp ****   MX_I2C1_Init();
 298              		.loc 1 98 14 is_stmt 0 view .LVU75
 299 000e FFF7FEFF 		bl	MX_DMA_Init
 300              	.LVL12:
  99:Core/Src/main.cpp ****   MX_TIM1_Init();
 301              		.loc 1 99 3 is_stmt 1 view .LVU76
  99:Core/Src/main.cpp ****   MX_TIM1_Init();
 302              		.loc 1 99 15 is_stmt 0 view .LVU77
 303 0012 FFF7FEFF 		bl	MX_I2C1_Init
 304              	.LVL13:
 100:Core/Src/main.cpp ****   MX_TIM2_Init();
 305              		.loc 1 100 3 is_stmt 1 view .LVU78
 100:Core/Src/main.cpp ****   MX_TIM2_Init();
 306              		.loc 1 100 15 is_stmt 0 view .LVU79
 307 0016 FFF7FEFF 		bl	MX_TIM1_Init
 308              	.LVL14:
 101:Core/Src/main.cpp ****   MX_TIM3_Init();
 309              		.loc 1 101 3 is_stmt 1 view .LVU80
 101:Core/Src/main.cpp ****   MX_TIM3_Init();
 310              		.loc 1 101 15 is_stmt 0 view .LVU81
 311 001a FFF7FEFF 		bl	MX_TIM2_Init
 312              	.LVL15:
 102:Core/Src/main.cpp ****   MX_TIM4_Init();
 313              		.loc 1 102 3 is_stmt 1 view .LVU82
 102:Core/Src/main.cpp ****   MX_TIM4_Init();
 314              		.loc 1 102 15 is_stmt 0 view .LVU83
 315 001e FFF7FEFF 		bl	MX_TIM3_Init
 316              	.LVL16:
 103:Core/Src/main.cpp ****   MX_TIM8_Init();
 317              		.loc 1 103 3 is_stmt 1 view .LVU84
 103:Core/Src/main.cpp ****   MX_TIM8_Init();
 318              		.loc 1 103 15 is_stmt 0 view .LVU85
 319 0022 FFF7FEFF 		bl	MX_TIM4_Init
 320              	.LVL17:
 104:Core/Src/main.cpp ****   MX_UART4_Init();
 321              		.loc 1 104 3 is_stmt 1 view .LVU86
 104:Core/Src/main.cpp ****   MX_UART4_Init();
 322              		.loc 1 104 15 is_stmt 0 view .LVU87
 323 0026 FFF7FEFF 		bl	MX_TIM8_Init
 324              	.LVL18:
 105:Core/Src/main.cpp ****   MX_USART2_UART_Init();
 325              		.loc 1 105 3 is_stmt 1 view .LVU88
ARM GAS  /tmp/ccuQbbvM.s 			page 14


 105:Core/Src/main.cpp ****   MX_USART2_UART_Init();
 326              		.loc 1 105 16 is_stmt 0 view .LVU89
 327 002a FFF7FEFF 		bl	MX_UART4_Init
 328              	.LVL19:
 106:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 329              		.loc 1 106 3 is_stmt 1 view .LVU90
 106:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 330              		.loc 1 106 22 is_stmt 0 view .LVU91
 331 002e FFF7FEFF 		bl	MX_USART2_UART_Init
 332              	.LVL20:
 118:Core/Src/main.cpp ****   robo_play();
 333              		.loc 1 118 3 is_stmt 1 view .LVU92
 118:Core/Src/main.cpp ****   robo_play();
 334              		.loc 1 118 12 is_stmt 0 view .LVU93
 335 0032 FFF7FEFF 		bl	_Z9robo_initv
 336              	.LVL21:
 119:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 337              		.loc 1 119 3 is_stmt 1 view .LVU94
 119:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 338              		.loc 1 119 12 is_stmt 0 view .LVU95
 339 0036 FFF7FEFF 		bl	_Z9robo_playv
 340              	.LVL22:
 341              	.L18:
 121:Core/Src/main.cpp ****   {
 342              		.loc 1 121 3 is_stmt 1 discriminator 1 view .LVU96
 121:Core/Src/main.cpp ****   {
 343              		.loc 1 121 3 discriminator 1 view .LVU97
 344 003a FEE7     		b	.L18
 345              		.cfi_endproc
 346              	.LFE421:
 348              		.text
 349              	.Letext0:
 350              		.file 3 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_de
 351              		.file 4 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint
 352              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 353              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 354              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 355              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 356              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 357              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 358              		.file 11 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1
 359              		.file 12 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1
 360              		.file 13 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1
 361              		.file 14 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/math.h"
 362              		.file 15 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1
 363              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 364              		.file 17 "Core/Inc/periphs/gpio.h"
 365              		.file 18 "Core/Inc/periphs/dma.h"
 366              		.file 19 "Core/Inc/periphs/i2c.h"
 367              		.file 20 "Core/Inc/periphs/tim.h"
 368              		.file 21 "Core/Inc/periphs/usart.h"
 369              		.file 22 "Core/Inc/robot/robo_init.h"
 370              		.file 23 "Core/Inc/robot/robot_operation.h"
 371              		.file 24 "<built-in>"
ARM GAS  /tmp/ccuQbbvM.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccuQbbvM.s:18     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccuQbbvM.s:26     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccuQbbvM.s:62     .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccuQbbvM.s:67     .text.Error_Handler:0000000000000000 $t
     /tmp/ccuQbbvM.s:74     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccuQbbvM.s:105    .text._Z18SystemClock_Configv:0000000000000000 $t
     /tmp/ccuQbbvM.s:112    .text._Z18SystemClock_Configv:0000000000000000 _Z18SystemClock_Configv
     /tmp/ccuQbbvM.s:260    .text._Z18SystemClock_Configv:00000000000000a4 $d
     /tmp/ccuQbbvM.s:266    .text.main:0000000000000000 $t
     /tmp/ccuQbbvM.s:273    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM4_Init
MX_TIM8_Init
MX_UART4_Init
MX_USART2_UART_Init
_Z9robo_initv
_Z9robo_playv
